import java.util.* ;
import java.io.*; 
import java.util.ArrayList;

public class Solution 
{
    public static int reversePairs(ArrayList<Integer> arr) 
    {
        return mergeSort(arr, 0, arr.size()-1);
    }
    static int mergeSort(ArrayList<Integer> nums, int i, int j){
        if(i >= j) return 0;
        
        int mid = (i + j) / 2;
        int inv = mergeSort(nums, i, mid);
        inv += mergeSort(nums, mid+1, j);
        inv += merge(nums, i, mid, j);
        return inv;
    }
    
    static int merge(ArrayList<Integer> nums, int start, int mid, int end){
        int count = 0;
        int j = mid+1;
        for(int i = start; i <= mid; i++ ){
            while(j <= end && nums.get(i) >( 2 * (long)nums.get(j))){
                j++;
            }
            
            count += (j - (mid+1));
        }
        
        ArrayList<Integer> temp = new ArrayList<>();
        int i = start;
        j = mid+1;
        
        while(i <= mid && j <= end){
            if(nums.get(i) <= nums.get(j)){
                temp.add(nums.get(i));
                i++;
            }else{
                temp.add(nums.get(j));
                j++;
            }
        }
        
        while(i <= mid){
            temp.add(nums.get(i++));
        }
        
        while(j <= end){
            temp.add(nums.get(j++));
        }
        int x = 0;
        for(i = start; i <= end; i++){
            nums.set(i, temp.get(x++));
        }
        
        return count;
    }
}
