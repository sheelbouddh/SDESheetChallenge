import java.util.*;
public class Solution {

	public static int[] KMostFrequent(int n, int k, int[] nums) {
		HashMap<Integer, Integer> map = new HashMap<>();
        for(int i :nums){
            map.put(i, map.getOrDefault(i, 0)+1);
        }
        
        PriorityQueue<int[]> pq = new PriorityQueue<>((a,b) -> a[1] - b[1]);
        
        for(int key : map.keySet()){
            pq.offer(new int[]{key, map.get(key)});
            if(pq.size() > k){
                pq.poll();
            }
        }
        
        int[] ans = new int[k];
        for(int i = 0; i < k; i++){
            int[] temp = pq.poll();
            ans[i] = temp[0];
        }
        
        return ans;
	}

}
