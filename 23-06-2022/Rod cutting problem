public class Solution {
	public static int cutRod(int price[], int n) {
        int[][] dp = new int[n+1][n+1];
		return cut(price, n, n, dp);
	}
    
    static int cut(int[] price, int n , int i, int[][] dp){
        if(i <= 0 || n < 0){
            return -1;
        }
        
        if(n == 0){
            return 0;
        }
        
        if(dp[n][i] != 0){
            return dp[n][i];
        }
        
        int notTake = cut(price, n, i-1, dp);
        int take= 0;
        if(n - i >= 0){
            take = cut(price, n-i, i, dp);
            if(take != -1){
                take += price[i-1];
            }
        }
        return dp[n][i] = Math.max(take, notTake);
    }
}
