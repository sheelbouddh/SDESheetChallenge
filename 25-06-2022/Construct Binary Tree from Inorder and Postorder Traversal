/************************************************************
  
   Following is the TreeNode class structure
   
   class TreeNode<T> { 
        T data; 
        TreeNode<T> left;
        TreeNode<T> right;
  
        TreeNode(T data) { 
            this.data = data; 
            left = null; 
            right = null; 
        }
   }
    
 ************************************************************/
import java.util.*;
public class Solution {
    static int cur;
	public static TreeNode<Integer> getTreeFromPostorderAndInorder(int[] postOrder, int[] inOrder) {
		cur = inOrder.length-1;
        Map<Integer, Integer> map = new HashMap<>();
        for(int i = 0; i < inOrder.length; i++){
            map.put(inOrder[i], i);
        }
        
        return build(inOrder, postOrder, 0, inOrder.length-1, map);
	}
    
    static TreeNode<Integer> build(int[] inorder, int[] preorder, int i, int j, Map<Integer, Integer> map){
        if(i > j || i < 0 || j >= inorder.length){
            return null;
        }
        
        TreeNode<Integer> root = new TreeNode<>(preorder[cur--]);
        int ind = map.get(root.data);
        root.right = build(inorder, preorder, ind+1, j, map);
        root.left = build(inorder, preorder, i, ind-1, map);
        
        
        return root;
        
    }
}
