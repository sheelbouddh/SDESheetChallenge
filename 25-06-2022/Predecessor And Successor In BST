/*************************************************************
    Following is the Binary Tree node structure

	class TreeNode<T> {
	    public T data;
	    public TreeNode<T> left;
	    public TreeNode<T> right;

	    TreeNode(T data) {
	        this.data = data;
	        left = null;
	        right = null;
	    }
	}

*************************************************************/

import java.util.ArrayList;

public class Solution {
	public static ArrayList<Integer> predecessorSuccessor(BinaryTreeNode <Integer> root, int key) {
		ArrayList<Integer> list = new ArrayList<>();
        inorder(root, list);
        ArrayList<Integer> ans = new ArrayList<>();
        for(int i = 0; i < list.size(); i++){
            if(list.get(i) == key){
                int pre = i > 0 ? list.get(i-1) : -1;
                int suc = i < list.size()-1 ? list.get(i+1) : -1;
                ans.add(pre);
                ans.add(suc);
                break;
            }
        }
        
        return ans;
	}
    
    static void inorder(BinaryTreeNode <Integer> root, ArrayList<Integer> list){
        if(root == null) return ;
        
        inorder(root.left, list);
        list.add(root.data);
        inorder(root.right, list);
    }
}
