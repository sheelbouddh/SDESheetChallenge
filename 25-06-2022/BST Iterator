/*
    Definition of Node class for reference

    class TreeNode<T> 
    {
        public T data;
        public TreeNode<T> left;
        public TreeNode<T> right;

        TreeNode(T data)
        {
            this.data = data;
            left = null;
            right = null;
        }
    }

*/
import java.util.*;
public class Solution {

    static class BSTIterator{
        Stack<TreeNode<Integer>> stack;
        BSTIterator(TreeNode<Integer> root){
            stack = new Stack<>();
            inorder(root);
        }

        void inorder(TreeNode<Integer> root){
            while(root!= null){
                stack.push(root);
                root= root.left;
            }
        }
        
        int next(){
            TreeNode<Integer> cur = stack.pop();
            inorder(cur.right);
            return cur.data;
        }

        boolean hasNext(){
            return !stack.isEmpty();
        }
    }
}

/*
    Your BSTIterator object will be instantiated and called as such:
    BSTIterator iterator = new BSTIterator(root);
    while(iterator.hasNext())
    {
       print(iterator.next()+" ");
    }
*/
