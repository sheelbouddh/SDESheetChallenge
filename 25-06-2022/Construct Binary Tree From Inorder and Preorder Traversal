/************************************************************

    Following is the TreeNode class structure

    class TreeNode<T>
    {
       public:
        T data;
        TreeNode<T> left;
        TreeNode<T> right;

        TreeNode(T data)
        {
            this.data = data;
            left = null;
            right = null;
        }
    };

************************************************************/

import java.util.*;

public class Solution 
{
    static int cur;
    public static TreeNode<Integer> buildBinaryTree(ArrayList<Integer>  inorder, ArrayList<Integer>  preorder) 
    {
        cur = 0;
        Map<Integer, Integer> map = new HashMap<>();
        for(int i = 0; i < inorder.size(); i++){
            map.put(inorder.get(i), i);
        }
        
        return build(inorder, preorder, 0, inorder.size()-1, map);
    }
    
    static TreeNode<Integer> build(ArrayList<Integer> inorder, ArrayList<Integer> preorder, int i, int j, Map<Integer, Integer> map){
        if(i > j || i < 0 || j >= inorder.size()){
            return null;
        }
        
        TreeNode<Integer> root = new TreeNode<>(preorder.get(cur++));
        int ind = map.get(root.data);
        root.left = build(inorder, preorder, i, ind-1, map);
        root.right = build(inorder, preorder, ind+1, j, map);
        
        return root;
        
    }
}
